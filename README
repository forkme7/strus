strus
=====

Library for merging term occurrencies and ranking documents in information
retrieval. Able to evaluate structured queries on unstructured text as well
as implenting classical information retrieval.
Independent from storage impementation.

strus defines information retrieval as evaluation of a query based on 3
types of operations:
  * Fetching and joining of feature occurrencies (document/position number)
  * Weighting of documents based on the feature occurrencies
  * Summarization as extraction of content based on the query matches

The architecture defines three components that are implemented as
shared libraries. Each library could possibly be replaced by an alternative
implementation.

  |--------------------|
  |     query eval     |  Query evaluation: Interpretes the query string
  |                    |  and uses the operators defined in the query
  |                    |  processor to execute the query
  |--------------------|
  |     query proc     |  Query processor: Defines the set operations
  |                    |  on feature occurrencies, the weighting functions
  |                    |  and the summarizers to augment the results.
  |--------------------|
  |     storage        |  Storage: Defines the storage where the all
  |                    |  retrievable information is stored.
  |                    |  Implements the retrieval of occurrencies of
  |                    |  the atomic terms and the weighting the terms
  |                    |  in case of statistical IR.
  |--------------------|


For using it you have to include "strus/strus.hpp"


And link against at the libraries:

  "libstrus_queryeval.so"
  "libstrus_queryproc.so"
  "libstrus_lvdbstorage.so"  (storage based on LevelDB)

