<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
	<link rel="icon" type="image/ico" href="images/strus.ico" />
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="description" content="Project <i>Strus</i> is a collection of open source C++ libraries for building a full-text search engine." />
	<meta name="keywords" content="fulltext search engine C++ PHP Python Java/JNI" />
	<meta name="author" content="Patrick Frey &lt;patrickpfrey (a) yahoo (dt) com&gt;" />
	<link rel="stylesheet" type="text/css" href="basic-profile.css" title="Basic Profile" media="all" />
	<title>Strus</title>
</head>

<body>
<script type="text/javascript">
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-63809026-1', 'auto');
  ga('send', 'pageview');
</script>
<div id="wrap">
	<div id="sidebar">
		<a href="index.htm"><img src="images/logotype.jpg" width="280" height="280" alt="Strus logo" /></a>
		<table border=0>
		<tr>
		<td><a href="http://patrickfrey.github.io/strus/doc/doxygen/html/index.html"><font size=5 style="Arial">C++&nbsp;</font></a>
		</td>
		<td><a href="http://patrickfrey.github.io/strusBindings/doc/php/doxygen/html/index.html"><img src="images/php.jpeg" width="75" alt="PHP logo" />&nbsp;</a>
		</td>
		<td><a href="http://patrickfrey.github.io/strusBindings/doc/java/doxygen/html/index.html"><font size=5 style="Arial">Java&nbsp;</font></a>
		</td>
		<td><a href="http://patrickfrey.github.io/strusBindings/doc/python/doxygen/html/index.html"><img src="images/python.jpeg" width="75" alt="Python logo" /></a>
		</td>
		</tr>
		</table>
		<h1>Strus</h1>
		<p class="slogan">If you are looking for software to build a non monolithic search engine with a clear model you might get enthused about <i>Strus</i>.</p>
		<ul>
			<li><b>Status</b><br />Development status is <i>pre-alpha</i>.</li>
			<li><b>License</b><br /><a href="https://www.gnu.org/copyleft/gpl.html">GPL v3</a></li>
			<li><b>Download</b><br />There are <a href="installation.htm#packages">packages</a> and docker <a href="installation.htm#docker">images</a> available. You can also fetch the <a href="installation.htm#github">sources</a> from github and build them on your own.</li>
			<li><b>Contact</b><br />Contact us by mail: contact <i>at</i> project <i>dash</i> strus <i>dot</i> net or follow us on twitter <a href="https://twitter.com/ProjectStrus">@ProjectStrus</a> or subscribe to the <a href="https://groups.google.com/forum/#!forum/project-strus">mailing list</a>.</li>
			<li><b>Whiteboard</b><br />Take part in the development of <i>Strus</i> or just inform yourself what is going on and have a look at the <i>Strus</i> <a href="whiteboard.htm">whiteboard</a>.</li>
		</ul>
	</div>

	<div id="content">
		<h2>About</h2>
		<p class="description">The open source project <i>Strus</i> provides a collection of C++ (C++98) 
		libraries and command line tools for building a competitive, scalable full-text search engine.
		The <i>Strus</i> search engine can be build using any key value store database that provides an
		<a href="http://en.wikipedia.org/wiki/Upper_and_lower_bounds">upper bound</a> seek function
		for the stored key/value pairs.
		Currently there exists an implementation based on the 
		<a href="http://leveldb.org">LevelDB</a> library.<br/>
		</p>
		<h2>Demo system</h2>
		<p class="description">There is one running demo system online to show the properties of 
		<i>Strus</i> under conditions of limited resources: <br/> 
		<a href="http://demo.project-strus.net/strus.html">Search on complete wikipedia collection (English)</a>
		</p>

		<h2>Tutorials</h2>
		<p class="description">
		A tutorial for building a simple search engine with <i>PHP</i> is available <a href="http://www.codeproject.com/Articles/1009582/Building-a-search-engine-with-Strus-tutorial">here</a>.
		<br/>
		Another tutorial for building a non trivial search engine also covering the insert case with <i>Python</i> and the <i>Torrnado web framework</i> is available <a href="http://www.codeproject.com/Articles/1059766/Building-a-search-engine-with-Python-Tornado-and-S">here</a>.
		</p>

		<h2>Installation</h2>
		<p class="description">
		There is a <a href="installation.htm">short installation guide</a> on how to fetch the <i>Strus</i> 
		sources from github and build them or alternatively to run <i>Strus</i> from docker images.
		</p>

		<h2>Documentation</h2>
		<p class="description">The documentation is work in progress.
		What is available can be found <a href="documentation.htm">here</a>.
		</p>

		<h2>Background</h2>
		<p class="description">Why to build yet another search engine ? <a href="story.htm">Here</a> I tell about my motivation and the story of <i>Strus</i>.
		I also try to explain, what distinguishes <i>Strus</i> from other open source fulltext 
		search engines.
		</p>

		<h3>News</h3>
		<table>
		<tr>
		<td><p class="timestamp">Feb 9th, 2016</p></td>
		<td><p class="newstext">
		<a href="http://www.codeproject.com/Articles/1072683/How-to-extend-a-Strus-search-engine-with-new-funct">New article published on codeproject</a>
		about writing Strus extension modules in C++.
		</td>
		</tr>
		<tr>
		<td><p class="timestamp">Jan 7th, 2016</p></td>
		<td><p class="newstext">
		Rewrote the summarizer for accumulating variables used for example in the NBLNK search of
		the wikipedia demo. The NBLNK search got now usable, only 2 or 3 times slower than the
		BM25 search plus abstracting. The old implementation was accessing the storage far
		(up to 50 times) too often.<br/>
		Reduced the forward index size of the wikipedia demo. On many systems this would speed up
		the performance significantly. Unfortunately this slowed down
		the BM25 search on the demo system, presumably due to higher seek times on
		its disk. Obviously block sizes should be configurable depending on the hardware used.
		</td>
		</tr>
		<tr>
		<td><p class="timestamp">Jan 2th, 2016</p></td>
		<td><p class="newstext">
		Some significant improvements in reducing the access of datablocks in the query.
		You see it in the standard query evaluation, for example the BM25 of the Wikipedia search.
		</td>
		</tr>
		<tr>
		<td><p class="timestamp">Dec 25th, 2015</p></td>
		<td><p class="newstext">
		<a href="http://www.codeproject.com/Articles/1066960/Distributing-a-search-engine-index-with-Strus">Article</a> that shows how scalable search engines can be built with <i>Strus</i>.
		</td>
		</tr>
		<tr>
		<td><p class="timestamp">Dec 23th, 2015</p></td>
		<td><p class="newstext">
		Fixed a terrible bug in the calculation of the metadata table layout causing
		unaligned memory accesses for every document ranked document in the query.
		It also led to wrong results due to overlapping table elements and to a significant
		performance loss.
		</td>
		</tr>
		<tr>
		<td><p class="timestamp">Dec 14th, 2015</p></td>
		<td><p class="newstext">
		Fixed a big design flaw causing an fdatasync for every
		new document inserted when using the interface in a straightforward way.
		This led to a loss of performance when inserting documents by
		a factor of 10 at least.
		The problem could be circumvented with a hack (pre-allocating document numbers), 
		that has also been removed now. If you tried <i>Strus</i> and experienced an unacceptable
		performance when inserting, you might give it a chance again.
		</td>
		</tr>
		<tr>
		<td><p class="timestamp">Nov 28th, 2015</p></td>
		<td><p class="newstext">A tutorial for building a search engine with <i>Strus</i>
		based on Python and the Tornado web framework has been published on codeproject.</td>
		</tr>
		<tr>
		<td><p class="timestamp">Nov 16th, 2015</p></td>
		<td><p class="newstext">The NBLNK weighting scheme for the Wikipedia demo is now online.
		This weighting scheme does not match documents against the query, but ranks the links
		in documents by weighting the sentences the links appear in against the query. It is
		a good example for the information extraction capabilities of <i>Strus</i>.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">Oct 29th, 2015</p></td>
		<td><p class="newstext">Packages of the latest build are available now. You can fetch
		them from the openSUSE Build Service.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">Oct 21th, 2015</p></td>
		<td><p class="newstext">Python bindings are available now.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">Oct 12th, 2015</p></td>
		<td><p class="newstext">C++ Interfaces of <i>Strus</i> are now exception free. This means that 
		libraries and modules can be linked with a defined set of symbols exported (visibility hidden)
		and you can use different compilers to build the objects if some STL types (vector,string)
		and the calling conventions are compatible.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">Aug 17th, 2015</p></td>
		<td><p class="newstext">Language bindings for Java are now available. Python bindings are
			following soon. </p></td>
		</tr>

		<tr>
		<td><p class="timestamp">Jul 1st, 2015</p></td>
		<td><p class="newstext">A docker image and a tutorial is available for <i>Strus</i>.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">June 15th, 2015</p></td>
		<td><p class="newstext">Started advertising <i>Strus</i> to get some feedback and maybe even some support.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">Mai 27th, 2015</p></td>
		<td><p class="newstext">The demo project of a search engine for the wikipedia collection (english) is online.</p></td>
		</tr>

		<tr>
		<td><p class="timestamp">April 2nd, 2015</p></td>
		<td><p class="newstext">The demo project of a search engine for the wikipedia collection (english) is close to be finished.</p></td>
		</tr>

		</table>

		<p class="credits">&copy; 2015 Patrick Frey<br />
		Original template design by <a href="http://andreasviklund.com/">Andreas Viklund</a> / Best hosted at <a href="https://www.svenskadomaner.se/?ref=mall&amp;ling=en" title="Svenska Domäner AB">www.svenskadomaner.se</a>
		</p>
	</div>
</div>
</body>
</html>

