%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (\721\745\760\743\745\751) ()
%%Title: (\721\762\760\740\763\761.eps)
%%CreationDate: 4/17/2013 9:03 AM
%%Canvassize: 16383
%%BoundingBox: 0 0 960 961
%%HiResBoundingBox: 0.000977 0.000977 960 960.0005
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 480 480 480 480
%AI3_TileBox: 190.7998 67.5 769.2002 892.5
%AI3_DocumentPreview: Header
%AI5_ArtSize: 960 960
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -41.5 919.5 1 1043 856 26 0 0 46 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 9613 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDC7FF7D52FD72FF52A8FD0AFF2727FD0AFFA87DFD
%66FF27F8FD09FF7DF8F8A8FD09FF2727FD66FF27F87DFD08FF52F8F852FD
%08FF7DF827FD65FFA8F8F8F8A8FD07FFF8F8F827A8FD07FFF8F8F8FD0BFF
%A8FD4EFFA852FD09FFA8F8F8F852FD06FF7DFD04F87DFD06FF27F8F8F8A8
%FD09FF52A8FD4EFFA8F852FD08FF7DFD04F87DFD05FF27FD04F827FD05FF
%7DFD04F87DFD08FF27F8A8FD4EFFA8F8F852FD07FF7DFD05F8FD04FFA8FD
%06F8A8FFFFFFA8FD05F852FD07FF27F8F8FD50FFF8F8F827FD06FF27FD05
%F827FFFFFF52FD06F852FFFFFF52FD05F852FD06FF27F8F8F8A8FD4EFFA8
%27F8F8F852FD05FF27FD06F87DFFA8FD08F8FFFF7DFD06F827FD05FF27FD
%04F8FD44FFA8FD0BFFFD05F827FD04FFFD07F827FFA8527D527D527D5252
%A8FF27FD07F8A8FFFFFF27FD05F8A8FD44FF52A8FD09FF27FD05F852FFFF
%A8F8F827527D7DFD0FFFA8A87D52F8F8F8A8FFFF27FD05F827FD09FFA852
%FD3AFF52F852A8FD07FFFD07F827FFA87DA8FD04FFA8A87D7DFD07527D52
%7DA8FD05FFA87DA8FF27FD06F827FD08FF52F827FD3AFF7DF8F8277DFD06
%FF27FD05F8527DFD04FFA8525227FD10F827277DA8FD04FF7D27FD05F827
%FD06FFA8F8F8F8A8FD3BFFFD04F827FD05FF27F8F8F827A8FFFFA87D2727
%FD19F8527DFFFFFF7D52F8F8F827FD04FFA852FD04F8A8FD3BFF52FD05F8
%7DFFFFFF27F87DA8FFFFA85227FD1FF8527DFFFFFF522727FFFFFF7D27FD
%04F827FD3CFF52FD06F8277DFF7DFFFFFF7D27FD25F87DFFFFA8A8FFA827
%FD06F852FD3CFFA8FD07F852FFFFFF7DFD29F8277DFFFFFF52FD07F87DFD
%3CFFA8FD06F87DFFFF7D27FD2DF87DFFFF7DFD06F8FD0BFFA8FD26FFA87D
%A8FD09FF27F8F8F827FFFFFF27FD30F852A8FFA827F8F8F852FD09FFA852
%FD28FF27F8277DA8FD06FF7DF8F852FFFF7DFD34F87DFFFF52F8F852FD06
%FFA85227F852FD29FFFD04F827A8FD04FFA8277DFFFF52FD36F827FFFFA8
%F8A8FD04FF7D52FD04F8A8FD29FF52FD05F82752A8A8FFA8FFA827FD39F8
%A8FFFFA8FF7D52FD06F852FD2AFFA827FD07F87DFFFF7DFD3CF8A8FFFF52
%FD08F8FD2CFF52FD06F827A8FF7DFD17F87DA87DA8A827FD21F87DFFFFFD
%07F852FD2DFFFD05F827FFFF7DFD17F852FD05FF7DFD22F87DFFFFFD05F8
%27A8FD2DFF52FD04F8A8FF52FD18F852FD05FF7DFD23F87DFFA8FD04F852
%FD2EFFA827F8F8A8FF7DFD1AF852FD04FF7DFD24F87DFFA8F8F8F8FD30FF
%52F87DFF7DFD1CF8A8FFFFFF52FD25F87DFFA8F852FD24FFA8277D7DA8A8
%FD07FF7DFFA8FD1DF852FFFFFFFD27F8A8FFA8A8FD07FFA8A85252A8FD19
%FF52FD05F852527D7DA8FFFFA827FD1DF852FFFFFF27FD27F8FFFFFFA8A8
%52522727FD04F827FD1BFF52FD08F827FFFF52FD1EF852FFFFFFFD28F827
%FFFF27FD08F827FD1CFFA827FD07F87DFF7DFD1FF87DFFFFA8FD29F87DFF
%7DFD08F8FD1EFFA8FD06F827FFFFFD1FF827FFFFFF7DFD2AF8A8FF27FD06
%F8A8FD1FFF7DFD05F8A8FF27FD1FF852FFFFFF27FD2AF852FFA8FD05F87D
%FD21FF52F8F8F852FF7DFD20F8FFFFFFA8FD2CF8A8FF52F8F8F852FD23FF
%27F8F8FFFF27FD1FF87DFFFFFF52FD2DF8FFA8F8F827FD25FFF87DFF7DFD
%1FF827FD04FFFD0AF8277D27F8275227FD1DF87DFF52F8A8FD25FFA8A8FF
%FD20F87DFFFFFF27FD07F8527D7DFFFFFFA8FFFFFFA8A85227FD19F827FF
%FFA8FD28FF7DFD1FF852FFFFFFA8FD06F852A8FD0EFF7DFD19F8A8FFFFA8
%FD1AFF527D5252FD0427F8F8F8FFFF27FD1EF827FD04FF52FD05F852FD12
%FF7DFD17F827FFA8F8F8FD0427FD04527DA8FD0FFF52FD09F852FFA8FD1F
%F8FD04FFA8FD05F87DFD14FFA8FD17F8A8FF27FD09F827FD11FF7DFD08F8
%7DFF27FD1EF8A8FD04FFFD05F87DFD16FF52FD16F852FF7DFD08F87DFD13
%FFA8FD07F8FFFF27FD1DF87DFD04FF52FD04F87DFD18FF52277DA87DFD12
%F8FFA8FD06F827A8FD15FFA8FD05F827FF7DFD1DF852FD04FF7DFD04F852
%FD1EFF52FD11F87DFF27FD04F827A8FD18FF27F8F8F87DFF52FD1CF827A8
%FD04FF27FD04F8A8FD1FFFFD11F852FF7DF8F8F852FD1BFF52F8F8A8FF27
%FD1CF87DFD04FF52FD04F827FD1FFFA827FD11F8FFA8F8F852FD1DFF7D52
%FFA8FD1CF852FD04FFA8FD05F8FD21FF27FD11F8A8FF277DFD21FF52FD1B
%F827FD05FFFD05F8A8FD21FF52FD11F87DFD21FF7DFFFF52FD1BF8A8FD04
%FF52FD04F8A8FD22FF27FD11F852FFA8A8FD1AFFA87D52F8F87DFF27FD1A
%F852FD04FFA8FD04F87DFD24FF27FD10F827FFA8F827527DA8FD13FFA852
%27FD05F8FFFF27FD1AF8A8FD04FF52F8F8F827FD25FF52FD11F8FFA827F8
%F8F827277DA8FD0DFF7D27FD09F8FFA8FD1BF8FD05FFFD04F8A8FD24FFA8
%FD12F8A8FFFD09F8277DFD0AFFA852FD08F827FF7DFD1AF852FD05FF27F8
%F827FD25FF27FD12F8A8FF27FD08F827A8FD0CFFA827FD06F852FF7DFD1A
%F852FD05FF27F8F87DFD24FF52FD13F87DFF27FD06F8277DFD10FFA852FD
%04F852FF52FD1AF87DFD05FF7DF8F8A8FD24FF27FD13F87DFF52FD04F827
%A8FD14FFA827F8F87DFF52FD1AF852FD05FFA8F8F8A8FD24FFFD14F852FF
%52F8F8277DFD18FF7D2752FF52FD1AF87DFD06FFA8A8FD24FF52FD14F852
%FF7DF87DFD1EFF52FD1AF852FD2BFF52FD15F852FFA8FD20FF52FD1AF87D
%FD2AFF27FD16F852FD1EFF7DF87DFF52FD1AF827FD29FFA8FD17F852FF52
%277DFD18FF7D27F8F852FF52FD1AF852FD29FF7DFD17F87DFF7DF8F827A8
%FD14FFA827FD04F852FF7DFD1AF827FD29FF52FD17F852FF52FD04F8277D
%FD10FFA852FD06F827FF7DFD1AF827FD29FF52FD17F87DFF52FD06F852A8
%FD0CFFA827FD08F827FFA8FD1BF8FD28FF7DFD18F87DFF27FD08F8527DFD
%0AFF7D52FD09F8FFA8FD1BF8A8FD27FF27FD18F8A8FF27FD07F827277DFD
%0DFF7D7D27FD05F8A8FFFD1BF827A8FD25FF27FD19F8A8FFFD05F82752A8
%A8FD12FFA8A85227F8A8FF27FD1BF87DFD24FFA8FD19F827FFA8F8F8527D
%FD1BFFA8A8FF27FD1BF852FD22FFA827FD1AF852FFFF7DFD21FF7DFD1BF8
%27FD21FF7DFD1CF87DFD21FF7D27FFA8FD1CF87DFD1EFFA827FD1DF8A8FF
%527DFD1DFF7DF8F8A8FF27FD1CF8A8FD1CFFA827FD1DF827FFFFF8F852FD
%1BFF52F8F8F87DFF52FD1DF8A8FD1AFF52FD1FF852FF52F8F8F827FD18FF
%A827FD04F827FF7DFD1EF8A8FD19FFA87DA87DFFA827FD19F8A8FF27FD04
%F827FD16FF7DFD07F8A8FFFD1FF87DFD1EFFA8FD19F8A8FFFD07F8A8FD13
%FF7DFD08F87DFF52FD1FF8527DFD0EFFA85227F852527D7DA8A8FD05FF52
%FD17F852FF7DFD08F87DFD11FF27FD09F827FF7DFD22F827F827527DFD04
%FF527D7D27FD0AF827A8FFFFFF7DFD17F8A8FF27FD09F852A8FD0EFFA87D
%527D525227522727F827A8FF27FD25F87DFFFFFF27FD10F8A8FFFFA8FD16
%F827FFFFF827F82727522752527D52FD0EFFA8FD0BFFA8FFFF7DFD24F827
%FFFFFF27FD11F827FFFFFF27FD15F87DFFFFA8A8FD24FFA8FFFF27FD22F8
%27FFFFFF52FD13F87DFFFF7DFD15F8FD28FFA8F852FF7DFD21F827FFFFFF
%A8FD14F827FFFFA8FD14F87DFF7DF8FD25FF27F827FFFF27FD1EF82752FD
%04FFA8FD15F8A8FFFF27FD12F827FFFFF8F827FD23FF52F8F8F852FF7DFD
%1CF8277DA8FD05FF27FD15F827FFFFA8FD12F87DFF27F8F8F852FD21FF7D
%FD05F8A8FF52FD17F8527DA8FD08FF7DFD16F827A8FFFF27FD10F827FFA8
%FD05F87DFD1FFFA8FD06F827FFA8FD12F827527DA8FD09FFA8A852FD18F8
%7DFFFF52FD10F8FFFF27FD06F8A8FD1EFFFD08F87DFF7DFD10F87DFD08FF
%A87D5252FD1CF827FFFFA8FD0FF87DFF7DFD07F827A8FD1CFF27FD08F827
%FFFF27FD0EF87DFD04FFA8A85252FD22F8A8FFA827FD0DF852FFFFFD09F8
%27FD1BFF27FD04F827527D7DA8A8FFFFFF27FD0CF827FFFF7D7D2727FD25
%F87DFFFF7DFD0CF827FFFFFFA87D7D52522727F8F8F852FD19FFA85252A8
%A8FD07FFA87DFFA8FD0CF87DFF52FD2AF8FFFFFFFD0CF8A8FF7DA8FD06FF
%A8A87D7D27A8FD24FF52F8A8FFA8FD0AF8277D7D27FD2AF87DFFFF52FD0A
%F87DFF7DF852FD2FFFA8F8F8F8A8FF7DFD09F8A8FD2EF87DFFFFFF27FD07
%F87DFF7DF8F8F8A8FD2EFF52FD04F8FFFF7DFD07F87D52FD2FF8527DFF52
%FD06F87DFFA827F8F8F87DFD2DFFA8FD06F8FFFF7DFD39F82752A827F8F8
%F852FFA827FD05F8FD2DFF7DFD07F8FFFF7DFD3AF8277DF8F87DFFA827FD
%06F852FD2BFFA8FD08F852FFFF7DFD3CF87DFFFF52FD08F8A8FD2AFF52FD
%06F852A8FD05FF27FD38F827A8FD04FFA85227FD05F87DFD29FFA8FD04F8
%527DFD04FFA8F87DFFFF27FD36F852FFFF7D277DFFFFFFA87D27FD04F8FD
%29FF52F82752FD07FF52F8F852FFFF7DFD34F87DFFFF52F8F87DFD06FFA8
%7D27F827FD28FF52A8FD09FF27F8F8F827A8FFA827FD30F827FFFFA8FD04
%F827FD09FF7D52A8FD32FFFD05F8277DFFFFA827FD2CF8277DFFFF7DFD05
%F827FD3DFF7DFD07F852FFFFFF7D27FD29F87DFFFFFF52FD07F8A8FD3CFF
%7DFD06F827A8FFA8A8FFFF7D27FD24F8277DFFFFFFA8FF7D27FD06F852FD
%3CFF27FD05F87DFFFFFF27F852FFFFFF7D52FD20F827A8FFFFA852F827FF
%FFFF7DFD05F827FD3BFFA827F8F8F852FD05FF52F8F8F852A8FFFFFF7D52
%FD19F82727A8FFFFFFA852F8F8F827FD05FF27FD04F8FD3BFF7DF8F8F8A8
%FD06FF27FD05F8277DFD04FFA87D2727FD11F85252A8FD04FF7D27FD05F8
%27FD06FF7D27F8F87DFD3AFF52F852FD08FF27FD06F827FFA87DA8FD05FF
%A8A8527DFD07527D7DA8A8FD05FF7DA8FF27FD06F827FD07FFA852F852FD
%39FFA8527DFD09FFFD06F827FFFFA8F8F8F85252A8A8FD0FFF7D7D2727F8
%F87DFFA827FD05F827A8FD08FF7D27FD45FF27FD04F827FD04FF27FD06F8
%27FFA87D527D527D527D52FFFF52FD07F8FD04FF27FD05F8FD50FFFD04F8
%27FD05FF27FD06F87DFFFFFD08F8A8FF52FD06F827FD05FF27FD04F8A8FD
%4EFFA8F8F8F852FD06FF52FD05F852FFFFFF52FD06F852FFFFFF27FD05F8
%27FD06FF27F8F8F8FD4FFFA8F8F827FD07FF52FD05F8A8FFFFFFA8FD06F8
%A8FD04FFFD05F852FD07FF27F8F8A8FD4EFFA8F827FD08FFA8FD04F87DFD
%05FF27FD04F852FD05FF7DFD04F87DFD08FF52F8A8FD4EFFA827FD09FF7D
%F8F8F827FD06FF7DFD04F87DFD06FF27F8F8F8A8FD09FF52A8FD4EFFA8FD
%0BFFF8F8F8FD08FF27F8F8F8FD07FFA8F8F827FD66FF27F87DFD08FF52F8
%F852FD08FF7DF8F8FD66FF2727FD09FFA8F8F8A8FD09FF2752FD66FF7D7D
%FD0AFF27F8FD0AFFA852FD72FF527DFD7FFFA8FDFCFFFDFCFFFD46FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.860075 0.849699 0.789548 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(\315\340\357\360\340\342\353\377\376\371\350\345 \344\353\377 \354\356\355\362\340\346\355\356\351 \356\341\353\340\361\362\350) Ln
0 A
0 960 m
960 960 L
960 0 L
0 0 L
0 960 L
(n) *
-0.5 960.5 m
959.5 960.5 L
959.5 0.5 L
-0.5 0.5 L
-0.5 960.5 L
(n) *
0.000977 960.0005 m
960 960.0005 L
960 0.000977 L
0.000977 0.000977 L
0.000977 960.0005 L
(n) *
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 43 42 41 0 100 Lb
(Layer 1) Ln
0 A
0 O
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d1 XR
0.000977 0.000977 m
960 0.000977 L
960 960.0005 L
0.000977 960.0005 L
0.000977 0.000977 L
f
*u
0.860075 0.849699 0.789548 1 0 0 0 Xa
480.001 829.3535 m
672.8203 829.3535 829.1309 672.9424 829.1309 480.0005 c
829.1309 287.0586 672.8203 130.6475 480.001 130.6475 c
287.1816 130.6475 130.8701 287.0586 130.8701 480.0005 c
130.8701 672.9424 287.1816 829.3535 480.001 829.3535 c
480.001 829.3535 l
f
1 D
480.0083 924.9995 m
448.0703 843.9531 L
511.9443 843.9531 L
480.0083 924.9995 L
480.0083 924.9995 L
f
37.4175 433.752 m
121.3452 410.4092 L
114.7065 473.9375 L
37.4175 433.752 L
37.4175 433.752 L
f
218.2471 120.1309 m
291.7456 166.8867 L
240.0938 204.459 L
218.2471 120.1309 L
218.2471 120.1309 L
f
56.6899 342.7891 m
143.6343 337.3994 L
123.9399 398.1582 L
56.6899 342.7891 L
56.6899 342.7891 L
f
149.3394 182.2031 m
230.9351 212.709 L
188.1895 260.1719 L
149.3394 182.2031 L
149.3394 182.2031 L
f
94.5376 257.6543 m
180.6997 270.4844 L
148.7852 325.8135 L
94.5376 257.6543 L
94.5376 257.6543 L
f
741.3721 119.8438 m
719.6182 204.1963 L
667.9229 166.6807 L
741.3721 119.8438 L
741.3721 119.8438 L
f
922.5449 433.2646 m
845.3008 473.5352 L
838.5928 410.0166 L
922.5449 433.2646 L
922.5449 433.2646 L
f
810.5078 182.0166 m
771.6992 260.0068 L
728.9268 212.5693 L
810.5078 182.0166 L
810.5078 182.0166 L
f
903.2461 342.5537 m
836.0273 397.96 L
816.2988 337.209 L
903.2461 342.5537 L
903.2461 342.5537 L
f
865.3105 257.3652 m
811.1123 325.5654 L
779.1563 270.2607 L
865.3105 257.3652 L
865.3105 257.3652 L
f
298.8286 73.5537 m
360.9956 134.5752 L
302.6548 160.5811 L
298.8286 73.5537 L
298.8286 73.5537 L
f
660.8457 73.4023 m
657.0898 160.4336 L
598.7285 134.4775 L
660.8457 73.4023 L
660.8457 73.4023 L
f
387.2432 44.7773 m
435.3726 117.3857 L
372.9023 130.7012 L
387.2432 44.7773 L
387.2432 44.7773 L
f
572.6406 44.75 m
587.0049 130.6689 L
524.5322 117.373 L
572.6406 44.75 L
572.6406 44.75 L
f
479.8965 35.001 m
511.8555 116.04 L
447.981 116.0557 L
479.8965 35.001 L
479.8965 35.001 L
f
922.584 526.3574 m
838.6523 549.6782 L
845.3057 486.1519 L
922.584 526.3574 L
922.584 526.3574 L
f
741.6797 839.9346 m
668.1895 793.1582 L
719.8525 755.5996 L
741.6797 839.9346 L
741.6797 839.9346 L
f
903.291 617.3145 m
816.3438 622.6841 L
836.0527 561.9268 L
903.291 617.3145 L
903.291 617.3145 L
f
810.6016 777.8789 m
729.0127 747.3521 L
771.7686 699.9014 L
810.6016 777.8789 L
810.6016 777.8789 L
f
865.4229 702.4395 m
779.2627 689.5889 L
811.1914 634.2666 L
865.4229 702.4395 L
865.4229 702.4395 L
f
218.5537 840.0928 m
240.3306 755.7471 L
292.0146 793.2744 L
218.5537 840.0928 L
218.5537 840.0928 L
f
37.4565 526.6284 m
114.7124 486.376 L
121.4043 549.8965 L
37.4565 526.6284 L
37.4565 526.6284 L
f
149.4336 777.9023 m
188.2603 699.9224 L
231.0195 747.3716 L
149.4336 777.9023 L
149.4336 777.9023 L
f
56.7324 617.3467 m
123.9663 561.9541 L
143.6792 622.708 L
56.7324 617.3467 L
56.7324 617.3467 L
f
94.6504 702.5415 m
148.8618 634.355 L
180.8066 689.668 L
94.6504 702.5415 L
94.6504 702.5415 L
f
661.0859 886.4907 m
598.9336 825.4531 L
657.2793 799.4619 L
661.0859 886.4907 L
661.0859 886.4907 L
f
299.0703 886.5552 m
302.8462 799.5239 L
361.2012 825.4941 L
299.0703 886.5552 L
299.0703 886.5552 L
f
572.666 915.2461 m
524.5527 842.625 L
587.0264 829.3252 L
572.666 915.2461 L
572.666 915.2461 L
f
387.2666 915.2285 m
372.9229 829.3066 L
435.394 842.6182 L
387.2666 915.2285 L
387.2666 915.2285 L
f
0 D
649.6963 460.2783 m
649.6934 460.2686 649.6865 460.248 V
649.6963 460.2783 L
649.6963 460.2783 L
f
1 D
662.124 263.6016 m
662.1328 263.6035 662.1436 263.6055 662.1533 263.6084 C
662.8984 263.7764 663.6191 263.9531 664.3232 264.1328 C
664.3271 264.1338 664.333 264.1348 664.3379 264.1367 C
663.5186 263.9492 662.7871 263.7549 662.124 263.6016 C
662.124 263.6016 L
f
333.5259 262.1191 m
333.5273 262.1104 333.5273 262.1006 333.5283 262.0928 C
333.5273 262.1016 333.5273 262.1104 333.5259 262.1191 C
333.5259 262.1191 L
f
333.8247 259.3467 m
333.7422 260.1758 333.6426 260.9199 333.5742 261.5918 C
333.5747 261.5801 333.5762 261.5684 333.5771 261.5566 C
333.6499 260.7988 333.7349 260.0645 333.8247 259.3467 C
333.8247 259.3467 L
f
668.0352 598.856 m
656.3887 597.7935 657.2861 599.0254 651.7969 596.3647 c
648.042 594.5435 645.5391 592.9805 643.6768 590.4668 C
643.8789 593.7886 637.9189 602.1465 633.5088 605.6904 c
629.0996 609.2344 631.2236 612.4575 621.8135 618.8096 c
612.4023 625.1616 611.1055 622.3901 604.1602 626.9463 c
597.2148 631.5039 595.126 634.5781 579.8037 636.4683 c
564.4824 638.3599 577.2461 637.2217 569.2871 639.2451 c
561.3281 641.2661 558.7471 641.7593 547.1748 638.5894 c
535.6025 635.4209 539.3145 638.7651 531.3779 641.0474 c
523.4424 643.3296 524.8428 641.3677 515.2627 636.9702 c
505.6816 632.5737 507.6611 637.1226 500.9639 635.6196 c
494.2666 634.1157 493.1602 630.5381 488.2627 628.6123 c
483.3643 626.6865 482.6582 624.6489 477.9565 619.0288 c
473.2549 613.4092 474.0776 616.749 466.5103 611.3853 c
458.9443 606.021 461.5771 603.1606 457.061 599.6245 c
452.5449 596.0898 451.3135 596.9873 447.2012 592.1016 c
443.0894 587.2173 446.4063 586.1338 441.8501 579.1895 c
437.293 572.2441 435.1743 565.3867 Y
431.8203 563.1724 429.6235 561.3682 428.812 560.3394 c
423.7793 553.9604 416.9238 548.4673 412.7949 540.4336 c
408.666 532.4004 401.915 527.3574 401.8809 519.6152 c
401.8472 511.873 396.8687 509.0347 398.062 503.2837 c
399.2573 497.5322 396.5137 495.479 396.5425 492.8511 c
396.5698 490.2231 394.8691 494.707 390.3975 493.1357 c
387.7139 492.1929 385.9092 493.1582 383.915 494.2246 C
379.1709 503.5991 376.2515 516.1577 375.5796 524.9346 c
376.2432 553.6416 465.1689 639.9922 458.9785 707.8164 C
460.7017 707.5186 462.3838 708.395 463.187 711.1865 c
464.5298 715.8525 463.0576 720.144 461.7852 721.0894 c
460.5142 722.0342 463.3882 728.2632 462.6104 733.9482 c
461.833 739.6348 453.9048 743.5552 448.0942 741.6216 c
447.7158 741.4951 447.3081 741.3828 446.876 741.2832 C
439.7642 740.0156 428.0649 741.1587 V
426.5718 741.4219 423.3267 742.7539 420.7695 740.4858 c
420.6353 740.3662 420.5039 740.2236 420.3789 740.0601 C
420.3389 740.0088 420.2983 739.9546 420.2593 739.8984 C
418.9365 738.2061 418.6387 736.3003 Y
418.0718 734.3828 417.7656 732.3291 417.6025 730.8115 C
416.7212 730.9585 415.7666 731.1011 414.542 731.1147 c
410.9775 731.1553 408.4561 728.502 410.21 726.959 c
411.9648 725.4155 414.9634 725.3032 Y
420.8975 720.4453 431.8145 709.7617 432.1045 696.7256 c
433.27 644.4624 343.998 570.6543 335.9531 527.665 c
335.9424 527.606 335.9321 527.5479 335.9214 527.4883 C
333.4111 513.4238 332.1211 499.9536 333.7725 482.0259 c
333.502 476.5723 333.5684 471.5918 334.48 469.6348 c
336.9038 464.4297 332.999 450.0752 335.7529 445.6289 c
338.5078 441.1826 334.6904 430.7588 341.8037 425.1357 c
346.873 421.1279 346.8174 417.9785 347.813 413.5166 C
348.5044 408.4434 349.9702 404.998 v
351.4346 401.5537 352.6226 399.5918 352.98 396.6064 c
353.3369 393.6221 357.4116 389.4346 360.1367 387.6172 c
362.8633 385.7988 367.334 380.166 370.7788 375.3633 c
374.2227 370.5586 376.7432 369.5645 379.1841 368.2314 c
381.6245 366.8975 387.2925 358.6787 393.9126 357.1055 c
400.5327 355.5303 402.6206 356.1318 408.0732 352.4951 c
413.5254 348.8584 424.1768 353.8496 429.1104 351.7686 c
434.0459 349.6885 439.5537 347.4248 442.7358 348.5195 c
443.7056 348.8525 445.5786 348.9697 447.9365 348.9434 C
446.1465 343.5381 443.7803 338.5723 440.4468 334.7705 c
433.2529 326.5674 426.4185 319.9561 421.5 314.4043 C
409.7959 304.8418 354.4277 292.8047 337.7861 289.4199 C
320.5317 285.9082 314.5225 280.4287 309.4355 274.1377 c
304.3481 267.8467 306.6099 260.1133 300.0981 256 c
293.5864 251.8887 295.1968 244.6152 288.9976 239.2451 c
286.7749 237.3203 284.3374 235.3496 282.4697 233.6074 C
285.9688 231.0195 289.4243 231.6445 v
292.8794 232.2686 296.2905 236.3721 299.2773 238.9424 c
302.2632 241.5146 301.4092 246.0166 299.7095 250.5908 c
298.0098 255.1641 306.4238 248.9063 311.3828 248.4785 c
316.3428 248.0508 317.7891 254.4443 318.8223 259.6455 c
319.8555 264.8457 321.7012 266.2842 324.3525 264.0879 c
327.0024 261.8916 327.1909 262.8613 330.3721 264.0615 c
333.1016 265.0938 333.4224 263.3242 333.5259 262.1191 c
333.3135 264.9199 333.9609 266.3906 339.6533 267.5996 c
347.6431 269.2949 379.6943 275.7178 396.0522 280.2129 C
412.4126 284.708 419.7598 283.2266 432.689 286.6689 c
435.8174 287.5 440.9448 289.4121 443.1943 290.9336 c
447.3008 293.7129 452.1777 302.709 452.3335 303.2275 C
456.686 311.6201 456.7817 322.9609 469.9673 336.5049 c
474.3896 341.0479 478.8779 345.4092 483.1729 349.4727 C
483.21 349.4707 483.248 349.4688 483.2861 349.4678 c
488.7803 349.2402 495.6406 345.5771 501.627 347.9316 c
507.6133 350.2861 508.8848 352.8047 512.9043 354.249 c
516.9238 355.6953 518.7139 356.1406 Y
520.708 356.5137 522.5898 356.7324 524.334 356.9736 C
531.2227 357.8301 534.0439 359.2861 v
534.4648 359.501 534.8545 359.6445 535.2266 359.7383 C
544.9932 357.4932 558.0996 354.877 565.2969 355.1064 c
577.7334 355.501 596.1055 347.4932 598.6641 344.4922 c
598.7227 344.4238 598.7793 344.3623 598.834 344.3096 C
608.6689 332.7969 628.5527 280.3721 634.002 264.2881 c
639.6523 247.6104 645.8438 242.3389 652.7246 238.0811 c
659.6035 233.8242 666.9922 237.04 671.8906 231.0977 c
676.7881 225.1533 683.8008 227.6631 689.9072 222.1885 c
692.0967 220.2256 694.3574 218.0547 696.3203 216.4209 C
698.4492 220.2168 697.3955 223.5664 v
696.3418 226.916 691.8418 229.7861 688.916 232.4258 c
685.9902 235.0654 681.6309 233.6514 677.3066 231.3896 c
672.9824 229.1299 678.1348 238.2637 677.9355 243.2373 c
677.7373 248.2109 671.2119 248.8438 665.9219 249.2148 c
660.6338 249.5869 658.9746 251.2363 660.8203 254.1426 c
662.667 257.0479 661.6816 257.1123 660.0898 260.1182 c
658.7246 262.6973 660.4385 263.2373 661.6221 263.4922 c
658.8691 262.9287 657.3291 263.3857 655.416 268.8809 c
652.7285 276.5938 642.332 307.585 635.8174 323.25 C
629.3027 338.915 629.8496 346.3906 624.8115 358.7852 c
623.5928 361.7842 621.0635 366.6426 619.2598 368.6709 c
615.8926 372.7461 609.4883 375.1113 603.1777 374.4541 c
596.5244 373.7617 580.3418 372.6631 570.7041 375.0449 C
571.4531 376.3008 572.6768 377.6348 575.082 378.9619 c
581.4326 382.4648 584.9785 384.0537 589.8828 390.376 c
594.7871 396.6982 602.7578 396.7432 606.1299 401.4316 c
609.501 406.1201 612.2725 408.498 621.5684 410.4268 c
630.8643 412.3555 630.6729 417.0176 631.2471 420.1484 c
631.8223 423.2803 637.0488 426.1465 639.2207 431.3691 c
641.3936 436.5898 643.0059 438.4795 646.2998 443.0439 c
649.5947 447.6074 648.1426 451.835 648.7227 455.4961 c
649.251 458.8203 649.623 460.0498 649.6865 460.248 C
649.6826 460.248 649.6738 460.249 V
649.6777 460.2598 649.6816 460.2695 649.6846 460.2803 C
649.6924 460.2783 649.6963 460.2783 Y
652.1689 466.8955 l
652.79 468.5449 652.6387 471.1934 653.4219 475.0605 C
654.8428 476.8604 657.9287 480.1265 663.1973 482.7153 c
670.8848 486.4937 667.4004 488.6421 673.7578 495.1636 c
680.1152 501.6865 672.6768 503.6616 678.416 512.0776 c
684.1543 520.4927 684.9404 517.5347 686.6797 525.2554 c
688.418 532.9771 698.0283 534.7456 692.4492 542.8569 c
686.8701 550.9683 684.3691 546.4648 685.4424 555.5596 c
686.5156 564.6528 683.3896 564.9312 683.2998 575.7036 c
683.21 586.4766 683.874 585.1035 677.0459 590.9639 c
670.2168 596.8242 679.6807 599.9175 668.0352 598.856 c
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
