<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 2.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
	<link rel="icon" type="image/ico" href="images/strus.ico" />
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="description" content="Strus performance issues. Some performance issues, you have to take care about when using strus, a collection of C++ libraries for building a full-text search engine." />
	<meta name="keywords" content="performance fulltext search engine C++" />
	<meta name="author" content="Patrick Frey &lt;patrickpfrey (a) yahoo (dt) com&gt;" />
	<link rel="stylesheet" type="text/css" href="text-profile.css" title="Text Profile" media="all" />
	<title>Strus performance issues</title>
</head>

<body>
<script type="text/javascript">
</script>
<div id="wrap">
<div id="content">
	<h1>Strus performance issues</h1>
	<div id="whiteboarddescr">Here are some performance issues that are very important to know about.
	</div>
	<h2>Pre-allocated document numbers for new inserts</h2>
	<p class="description">In Strus the internal number of a document gets assigned on its
	creation in a transaction context. This internal number is not changed later anymore.
	It has to be unique. This leads to an immediate write call to Leveldb and in the end to an fdatasync on disk
	for every document you create. You can avoid this fdatasync by using pre-allocated document numbers 
	for documents from which you know that they are new. The fdatasync does not happen, if the updated
	document (its docid) is already known or the document number of a new document has been passed down 
	to the create document call. Strus provides an interface to allocate document numbers in ranges.
	Normally it is known, when a document is new, so I found it acceptable to leave the situation as it is.
	Assigning the document numbers during the transaction commit would also lead
	to other performance penalties. They would not be so extreme, but also not so easy to fix 
	as with the pre-allocation of the document numbers for new documents.
	<br /><i><font color=red>The performance difference of using pre-allocated document numbers for inserts of new
	documents is huge. The smallest factor I observed was 10. So minimum <b>90%</b> of the time consumed 
	was system time for the avoidable fdatasync.</font></i>
	</p>

	<h2>Transaction size and number of inserter threads</h2>
	<p class="description">Choosing the size of a transaction, e.g. the number of documents you insert within
	one transaction, and the number of inserter threads
	used can speedup the system significantly when inserting a large amount of documents.
	2 threads and a million terms (1000 documents per transaction for documents containing 1000 words on
	average as base) for a machine with 4 GB memory is in most cases a good start setting to try.
	Of course it would be better if the system would guess these values on its own, but Strus is not there yet.
	<br /><i><font color=red>Choosing the right sessings there can speedup the insertion time by <b>factors</b>.
	</font></i>
	</p>
</div>
</div>
</body>
</html>

